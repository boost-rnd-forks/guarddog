rules:
  - id: maven-exec-base64-file
    languages:
      - java
    message: |
      This Java package contains code that decodes a Base64 string, stores it in a file and passes it to a potentially dangerous execution function.
      This is a common pattern in obfuscated or malicious code to hide payloads from static analysis.
    metadata:
      description: Identify Base64-decoded content being passed to a file, then in an execution functions in Java
    severity: WARNING
    patterns:
      - pattern-either:
        - pattern-inside: |
            $DEC = <... $BASE64. ... .decode(...) ...> ;
            ...     
        - pattern-inside: |
            $DEC = <... $BASE64. ... .decodeBase64(...) ...> ;
            ...
        - pattern-inside: |
            $DEC = <... DatatypeConverter.parseBase64Binary(...) ...> ;
            ...  
        - pattern-inside: |
            $DEC = <... $BASE64. ... .decodeBuffer(...) ...> ;
            ... 
        - pattern-inside: |
            $DEC = <... "...".getBytes(...) ...> ;
            ...
        - pattern-inside: |
            $DEC = <... $CRYPTO.decrypt(...) ...> ;
            ...
      
      - pattern-inside: |
          Files.write(<... $FILE ...>, <... $DEC ...>);
          ...    
      - pattern-either: 
        - pattern: compiler.run(..., <... $FILE ...>, ...)
        - pattern: ProcessBuilder(..., <... $FILE ...>, ...)
        - pattern: $ENGINE.eval(<... $FILE ...>, ...)
        - pattern: $M.invoke(..., <... $FILE ...>, ...)
        - pattern: defineClass(..., <... $FILE ...>, ...)
        - patterns: 
          - pattern: $EXEC(..., <... $FILE ...>, ...)
          - metavariable-regex:
              metavariable: $EXEC
              regex: (?i).*exec.*

